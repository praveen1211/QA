
package com.mss.utils;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Properties;

import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.mail.Authenticator;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;

public class MailManager extends javax.mail.Authenticator {
	private String mailhost = "smtp.miraclesoft.com"; // "smtp.mail.yahoo.com";
														// //"smtp.gmail.com";

	private String user;
	private String password;
	private Session session;

	public MailManager(String user, String password) {
		this.user = user;
		this.password = password;

		Properties props = new Properties();
		props.setProperty("mail.transport.protocol", "smtp");
		props.setProperty("mail.host", mailhost);
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.auth", "true");

		props.put("mail.smtp.port", "587");

		session = Session.getInstance(props, this);

	}
	
	@Override
	protected PasswordAuthentication getPasswordAuthentication() {
		return new PasswordAuthentication(user, password);
	}
	 /**
     * *************************************
     *
     * @sendMail() method used for generating mail in case of new user creation ,takes in required arguments and calls sendEmail().
     *
     * @Author:Manoranjan
     *
     * @Created Date:04/15/2015
     *
     **************************************
     */
	public synchronized String sendMail(String subject, String body,String sender, String recipients,String fname,String Userrole,String password) throws Exception {
		String success = "";
		session.setDebug(true);
		Transport transport;
		transport = session.getTransport();
		
		System.out.println("from" + sender);
		try {
			

				MimeMessage message = new MimeMessage(session);
				// DataHandler handler = new DataHandler(new
				// ByteArrayDataSource(body.getBytes(), "text/plain"));
				message.setSubject(subject);
				message.setFrom(new InternetAddress(sender));
				message.addRecipient(Message.RecipientType.TO,
						new InternetAddress(recipients));
				System.out.println("rec else" + recipients);
				sendEmail(subject, message, sender, recipients,
						transport,fname, Userrole ,password);
			// message.setReplyTo(InternetAddress.parse("ksonti@miraclesoft.com"));
			// System.out.println("to address"+recipients+"from"+message.getSender());
			/*    */
			success = "Success";
		} catch (Exception e) {

		}
		return success;
	}
	 /**
     * *************************************
     *
     * @sendEmail() method contains the body of the Email.
     *
     * @Author:Manoranjan
     *
     * @Created Date:04/15/2015
     *
     **************************************
     */
	public String sendEmail(String subject, MimeMessage message, String sender,
			String recipients,Transport transport,String fname,String Userrole,String password) throws Exception {
		MimeMultipart multipart = new MimeMultipart("related");

		// first part (the html)
		BodyPart messageBodyPart = new MimeBodyPart();
		StringBuilder htmlText = new StringBuilder();
		htmlText.append("<html><head><title>E-mail alert from QAFramework team</title>");
		htmlText.append("</head><body><font color='blue' size='2' face='Arial'>");
		htmlText.append("<p> Hello  "+fname+", </p>");
		htmlText.append("<p> Below are the login Credentials of QAFramework:</p>");
		htmlText.append("<br/><b>Email Address:</b>"+ recipients +" <br/><b>Userrole: </b> "+Userrole+" <br/><b>Password:</b> "+password+" </p><br/>");
		htmlText.append("<p> <a href='http://125.62.213.196:8080/QAFramework/'>Click here</a> to redirect the home page of QAFramework.</p><br/>");
		
		htmlText.append("<b>Regards,</b><br/>");
		htmlText.append("<p>QAFramework team.</p></font><br/>");
		htmlText.append("<font color='red', size='2' face='Arial'>*Note: Please do not reply to this e-mail.  It was generated by our System.</font>");
		htmlText.append("</body></html>");

		messageBodyPart.setContent(htmlText.toString(), "text/html");

		// add it
		multipart.addBodyPart(messageBodyPart);

		message.setContent(multipart);

		// message.setDataHandler(handler);
		System.out.println("to address" + recipients +Userrole +password);
		// Transport.send(message);
		transport.connect();
		transport.sendMessage(message,
				message.getRecipients(Message.RecipientType.TO));
		transport.close();
		return null;
	}
	
	
	 /**
     * *************************************
     *
     * @sendchngPwdMail() method used for generating mail in case of change in password ,takes in required arguments and calls sendchngPwdEmail().
     *
     * @Author:Manoranjan
     *
     * @Created Date:04/15/2015
     *
     **************************************
     */

	public synchronized String sendchngPwdMail(String subject, String body,String sender, String recipients,String fname,String chngPwd) throws Exception {
		String success = "";
		session.setDebug(true);
		Transport transport;
		transport = session.getTransport();
		
		System.out.println("from" + sender);
		try {
			

				MimeMessage message = new MimeMessage(session);
				// DataHandler handler = new DataHandler(new
				// ByteArrayDataSource(body.getBytes(), "text/plain"));
				message.setSubject(subject);
				message.setFrom(new InternetAddress(sender));
				message.addRecipient(Message.RecipientType.TO,
						new InternetAddress(recipients));
				System.out.println("rec else" + recipients);
				sendchngPwdEmail(subject, message, sender,transport, recipients, fname, chngPwd);
				
			// message.setReplyTo(InternetAddress.parse("ksonti@miraclesoft.com"));
			// System.out.println("to address"+recipients+"from"+message.getSender());
			/*    */
			success = "Success";
		} catch (Exception e) {

		}
		return success;
	}
	
	 /**
     * *************************************
     *
     * @sendchngPwdEmail() method contains the body of Email.
     *
     * @Author:Manoranjan
     *
     * @Created Date:04/15/2015
     *
     **************************************
     */
	
	public String sendchngPwdEmail(String subject, MimeMessage message, String sender,Transport transport,
			String recipients,String chngPwd, String fname) throws Exception {
		MimeMultipart multipart = new MimeMultipart("related");

		// first part (the html)
		BodyPart messageBodyPart = new MimeBodyPart();
		StringBuilder htmlText = new StringBuilder();
		htmlText.append("<html><head><title>E-mail alert from QAFramework team</title>");
		htmlText.append("</head><body><font color='blue' size='2' face='Arial'>");
		htmlText.append("<p> Hello  "+fname+", </p>");
		htmlText.append("<p> Below are the new login Credentials of QAFramework:</p>");
		htmlText.append("<br/><b>Email Address:</b>"+ recipients +"  <br/><b>Your New_Password:</b> "+chngPwd+" </p><br/>");
		htmlText.append("<p> <a href='http://172.17.0.151:8080/QAFramework/'>Click here</a> to redirect the home page of QAFramework.</p><br/>");
		
		htmlText.append("<b>Regards,</b><br/>");
		htmlText.append("<p>QAFramework team.</p></font><br/>");
		htmlText.append("<font color='red', size='2' face='Arial'>*Note: Please do not reply to this e-mail.  It was generated by our System.</font>");
		htmlText.append("</body></html>");

		messageBodyPart.setContent(htmlText.toString(), "text/html");

		// add it
		multipart.addBodyPart(messageBodyPart);

		message.setContent(multipart);

		// message.setDataHandler(handler);
		System.out.println("to address" + recipients  +fname +chngPwd);
		// Transport.send(message);
		transport.connect();
		transport.sendMessage(message,
				message.getRecipients(Message.RecipientType.TO));
		transport.close();
		return null;
	}
		

	
	 /**
     * *************************************
     *
     * @senduserRoleMail() method used for generating mail in case of change in role ,takes in required arguments and calls senduserRoleEmail().
     *
     * @Author:Manoranjan
     *
     * @Created Date:04/15/2015
     *
     **************************************
     */
	public synchronized String senduserRoleMail(String subject, String body,String sender, String recipients,String Userrole,String fname) throws Exception {
		System.out.println("hello synchronized role");
		String success = "";
		session.setDebug(true);
		Transport transport;
		transport = session.getTransport();
		
		System.out.println("from" + sender);
		try {
			

				MimeMessage message = new MimeMessage(session);
				// DataHandler handler = new DataHandler(new
				// ByteArrayDataSource(body.getBytes(), "text/plain"));
				message.setSubject(subject);
				message.setFrom(new InternetAddress(sender));
				message.addRecipient(Message.RecipientType.TO,
						new InternetAddress(recipients));
				System.out.println("rec else" + recipients);
				senduserRoleEmail(subject, message, sender,transport, recipients, Userrole,fname);
				
			// message.setReplyTo(InternetAddress.parse("ksonti@miraclesoft.com"));
			// System.out.println("to address"+recipients+"from"+message.getSender());
			/*    */
			success = "Success";
		} catch (Exception e) {

		}
		return success;
	}
	 /**
     * *************************************
     *
     * @senduserRoleEmail() method contains the body of Email.
     *
     * @Author:Manoranjan
     *
     * @Created Date:04/15/2015
     *
     **************************************
     */
	
	public String senduserRoleEmail(String subject, MimeMessage message, String sender,Transport transport,
			String recipients,String Userrole,String fname ) throws Exception {
		System.out.println("hello senduserRoleEmail role");
		MimeMultipart multipart = new MimeMultipart("related");

		// first part (the html)
		BodyPart messageBodyPart = new MimeBodyPart();
		StringBuilder htmlText = new StringBuilder();
		if (Userrole.equals("1")) {
			Userrole = "tester";
		} else {
			Userrole = "Admin";
		}
		htmlText.append("<html><head><title>E-mail alert from QAFramework team</title>");
		htmlText.append("</head><body><font color='blue' size='2' face='Arial'>");
     	htmlText.append("<p> Hello  "+fname+", </p>");
		htmlText.append("<p> Below are the new changes of QAFramework:</p>");
		htmlText.append("<br/><b>Email Address:</b>"+ recipients +"  <br/><b>Your role has changed:</b> "+Userrole+" </p><br/>");
		htmlText.append("<p> <a href='http://125.62.213.196:8080/QAFramework/'>Click here</a> to redirect the home page of QAFramework.</p><br/>");
		
		htmlText.append("<b>Regards,</b><br/>");
		htmlText.append("<p>QAFramework team.</p></font><br/>");
		htmlText.append("<font color='red', size='2' face='Arial'>*Note: Please do not reply to this e-mail.  It was generated by our System.</font>");
		htmlText.append("</body></html>");

		messageBodyPart.setContent(htmlText.toString(), "text/html");

		// add it
		multipart.addBodyPart(messageBodyPart);

		message.setContent(multipart);

		// message.setDataHandler(handler);
		System.out.println("to address" + recipients  +Userrole+fname);
		// Transport.send(message);
		transport.connect();
		transport.sendMessage(message,
				message.getRecipients(Message.RecipientType.TO));
		transport.close();
		return null;
	}
		
	public synchronized String sendOTPMail(String subject, String body,String sender, String recipients,String newPwd) throws Exception {
		String success = "";
		session.setDebug(true);
		Transport transport;
		transport = session.getTransport();
		
		System.out.println("from" + sender);
		try {
			

				MimeMessage message = new MimeMessage(session);
				// DataHandler handler = new DataHandler(new
				// ByteArrayDataSource(body.getBytes(), "text/plain"));
				message.setSubject(subject);
				message.setFrom(new InternetAddress(sender));
				message.addRecipient(Message.RecipientType.TO,
						new InternetAddress(recipients));
				System.out.println("rec else" + recipients);
				sendOTPEMail(subject, message, sender,transport, recipients, newPwd);
				
			// message.setReplyTo(InternetAddress.parse("ksonti@miraclesoft.com"));
			// System.out.println("to address"+recipients+"from"+message.getSender());
			/*    */
			success = "Success";
		} catch (Exception e) {

		}
		return success;
	}
	
	 /**
     * *************************************
     *
     * @sendchngPwdEmail() method contains the body of Email.
     *
     * @Author:Manoranjan
     *
     * @Created Date:04/15/2015
     *
     **************************************
     */
	
	public String sendOTPEMail(String subject, MimeMessage message, String sender,Transport transport,
			String recipients,String newPwd) throws Exception {
		MimeMultipart multipart = new MimeMultipart("related");

		// first part (the html)
		BodyPart messageBodyPart = new MimeBodyPart();
		StringBuilder htmlText = new StringBuilder();
		htmlText.append("<html><head><title>E-mail alert from QAFramework team</title>");
		htmlText.append("</head><body><font color='blue' size='2' face='Arial'>");
		htmlText.append("<p> Hello , </p>");
		htmlText.append("<p> Below are the new login Credentials of QAFramework:</p>");
		htmlText.append("<br/><b>Email Address:</b>"+ recipients +"  <br/><b>Your New_Password:</b> "+newPwd+" </p><br/>");
		htmlText.append("<p> <a href='http://172.17.0.151:8080/QAFramework/'>Click here</a> to redirect the home page of QAFramework.</p><br/>");
		
		htmlText.append("<b>Regards,</b><br/>");
		htmlText.append("<p>QAFramework team.</p></font><br/>");
		htmlText.append("<font color='red', size='2' face='Arial'>*Note: Please do not reply to this e-mail.  It was generated by our System.</font>");
		htmlText.append("</body></html>");

		messageBodyPart.setContent(htmlText.toString(), "text/html");

		// add it
		multipart.addBodyPart(messageBodyPart);

		message.setContent(multipart);

		// message.setDataHandler(handler);
		System.out.println("to address" + recipients +newPwd);
		// Transport.send(message);
		transport.connect();
		transport.sendMessage(message,
				message.getRecipients(Message.RecipientType.TO));
		transport.close();
		return null;
	}
		

	

	

	
	
}
